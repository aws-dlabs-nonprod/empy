// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatInput handles transcript 1`] = `
.c2 {
  background: #D5002B;
  border-radius: 0.3rem;
  box-sizing: border-box;
  color: #FFFFFF;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 1.6rem;
  height: 4.8rem;
  border: 0.1rem solid #D5002B;
  margin: 0 0 2rem 0;
  outline: none;
  padding: 0 1.8rem;
  position: relative;
  width: 100%;
  z-index: 3;
  -webkit-transition: background 0.2s ease,color 0.2s ease;
  transition: background 0.2s ease,color 0.2s ease;
  background: #F9F9F8;
  border-color: #D7D2CB;
  padding: 1.4rem 1.3rem;
}

.c2 svg {
  fill: #D5002B;
  height: 2rem;
  position: relative;
  width: 2rem;
}

.c0 {
  bottom: 1.5rem;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  height: 4.8rem;
  left: 1.5rem;
  overflow: hidden;
  position: fixed;
  right: 1.5rem;
  -webkit-transition: width 0.3s ease-in-out;
  transition: width 0.3s ease-in-out;
  -webkit-transition-property: opacity,width,-webkit-transform;
  -webkit-transition-property: opacity,width,transform;
  transition-property: opacity,width,transform;
  width: auto;
  will-change: opacity,width;
  z-index: 3;
}

.c0 input {
  box-sizing: border-box;
  display: block;
  width: 100%;
  background: #FFFFFF;
  border: 0.1rem solid #8C9296;
  border-right: none;
  border-radius: 0.3rem 0 0 0.3rem;
  height: 4.8rem;
  padding: 0 1.2rem;
  color: #2D373E;
  font-size: 1.6rem;
  outline: none;
}

.c0 input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.4);
}

.c0 input::-moz-placeholder {
  color: rgba(0,0,0,0.4);
}

.c0 input:-ms-input-placeholder {
  color: rgba(0,0,0,0.4);
}

.c0 input::placeholder {
  color: rgba(0,0,0,0.4);
}

.c0 .c1 {
  background: #D5002B;
  border: 0.1rem solid #D5002B;
  border-radius: 0 0.3rem 0.3rem 0;
  width: auto;
  height: 4.8rem;
}

.c0.form-enter {
  opacity: 0;
  -webkit-transform: translateY(2rem);
  -ms-transform: translateY(2rem);
  transform: translateY(2rem);
}

.c0.form-enter-done,
.c0.form-enter-active {
  opacity: 1;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
}

.c0.form-exit {
  opacity: 1;
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
}

.c0.form-exit-done,
.c0.form-exit-active {
  opacity: 0;
  -webkit-transform: translateY(2rem);
  -ms-transform: translateY(2rem);
  transform: translateY(2rem);
}

@media (min-width:992px) and (min-height:0px) {
  .c2 {
    font-size: 1.8rem;
    padding: 0 2rem;
    width: 100%;
  }

  .c2:hover {
    background: #e24d6b;
  }

  .c2:hover svg {
    fill: #FFFFFF;
  }

  .c2:hover .ButtonTip__StyledButtonTip-zuccjc-0 {
    opacity: 0;
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c2 {
    padding: 1.4rem 1.3rem;
  }

  .c2:hover {
    background: #FFFFFF;
  }

  .c2:hover svg {
    fill: #D5002B;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0 {
    left: auto;
    position: relative;
    right: auto;
    bottom: auto;
    width: 37rem;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0 .c1:hover {
    background: #e24d6b;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0.form-enter {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    width: 0;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0.form-enter-done,
  .c0.form-enter-active {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    width: 37rem;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0.form-exit {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    width: 37rem;
  }
}

@media (min-width:992px) and (min-height:0px) {
  .c0.form-exit-done,
  .c0.form-exit-active {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    width: 0;
  }
}

<Connect(ChatInput)>
  <ChatInput
    isOpen={true}
    sendMessage={[Function]}
  >
    <CSSTransition
      classNames="form"
      in={true}
      timeout={3000}
      unmountOnExit={true}
    >
      <Transition
        appear={false}
        enter={true}
        exit={true}
        in={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={3000}
        unmountOnExit={true}
      >
        <ChatInput__StyledChatInput
          action="/"
          method="post"
          onSubmit={[Function]}
        >
          <StyledComponent
            action="/"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "ChatInput__StyledChatInput-sc-12bvwwl-0",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "bottom:1.5rem;box-sizing:border-box;display:flex;flex-direction:row;height:4.8rem;left:1.5rem;overflow:hidden;position:fixed;right:1.5rem;transition:width 0.3s ease-in-out;transition-property:opacity,width,transform;width:auto;will-change:opacity,width;z-index:3;",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
        left: auto;
        position: relative;
        right: auto;
        bottom: auto;
        width: 37rem;
    ",
                    "}",
                    " input{box-sizing:border-box;display:block;width:100%;background:",
                    [Function],
                    ";border:0.1rem solid ",
                    [Function],
                    ";border-right:none;border-radius:",
                    [Function],
                    " 0 0 ",
                    [Function],
                    ";height:4.8rem;padding:0 1.2rem;color:",
                    [Function],
                    ";font-size:1.6rem;outline:none;&::placeholder{color:rgba(0,0,0,0.4);}}",
                    ".c1",
                    "{background:",
                    [Function],
                    ";border:",
                    [Function],
                    ";border-radius:0 ",
                    [Function],
                    " ",
                    [Function],
                    " 0;width:auto;height:4.8rem;",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
            &:hover {
                background: ",
                    [Function],
                    ";
            }
        ",
                    "}",
                    "}&.form-enter{opacity:0;transform:translateY(2rem);",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
            transform: none;
            width: 0;
        ",
                    "}",
                    "}&.form-enter-done,&.form-enter-active{opacity:1;transform:translateY(0);",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
            transform: none;
            width: 37rem;
        ",
                    "}",
                    "}&.form-exit{opacity:1;transform:translateY(0);",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
            transform: none;
            width: 37rem;
        ",
                    "}",
                    "}&.form-exit-done,&.form-exit-active{opacity:0;transform:translateY(2rem);",
                    "@media (min-width:",
                    "992",
                    "px) and (min-height:",
                    "0",
                    "px){",
                    "
            transform: none;
            width: 0;
        ",
                    "}",
                    "}",
                  ],
                },
                "displayName": "ChatInput__StyledChatInput",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ChatInput__StyledChatInput-sc-12bvwwl-0",
                "target": "form",
                "toString": [Function],
                "usesTheme": true,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            method="post"
            onSubmit={[Function]}
          >
            <form
              action="/"
              className="c0"
              method="post"
              onSubmit={[Function]}
            >
              <input
                onChange={[Function]}
                placeholder="Type a message or just speak it..."
                value=""
              />
              <Button__IconButton
                icon="mock-file"
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "background:",
                          [Function],
                          ";border-radius:",
                          [Function],
                          ";box-sizing:border-box;color:",
                          [Function],
                          ";cursor:pointer;display:flex;justify-content:center;align-items:center;font-size:1.6rem;height:4.8rem;border:",
                          [Function],
                          ";margin:0 0 2rem 0;outline:none;padding:0 1.8rem;position:relative;width:100%;z-index:3;transition:background 0.2s ease,color 0.2s ease;",
                          "@media (min-width:",
                          "992",
                          "px) and (min-height:",
                          "0",
                          "px){",
                          "
        font-size: 1.8rem;
        padding: 0 2rem;
        width: 100%;

        &:hover {
            background: ",
                          [Function],
                          ";
            
            svg {
                fill: ",
                          [Function],
                          ";
            }

            ",
                          ".ButtonTip__StyledButtonTip-zuccjc-0",
                          " {
                opacity: ",
                          [Function],
                          ";
                transform: translateY(0);
            }
        }
    ",
                          "}",
                          "background:",
                          [Function],
                          ";border-color:",
                          [Function],
                          ";padding:1.4rem 1.3rem;",
                          "@media (min-width:",
                          "992",
                          "px) and (min-height:",
                          "0",
                          "px){",
                          "
        padding: 1.4rem 1.3rem;

        &:hover {
            background: ",
                          [Function],
                          ";

            svg {
                fill: ",
                          [Function],
                          ";
            }
        }
    ",
                          "}",
                          ";svg{fill:",
                          [Function],
                          ";height:2rem;position:relative;width:2rem;}",
                        ],
                      },
                      "displayName": "Button__IconButton",
                      "foldedComponentIds": Array [
                        "Button__BaseButton-sc-1t6ofhe-0",
                      ],
                      "render": [Function],
                      "styledComponentId": "c1",
                      "target": [Function],
                      "toString": [Function],
                      "usesTheme": true,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  icon="mock-file"
                  onClick={[Function]}
                >
                  <Button
                    className="c1 c2"
                    disabled={false}
                    icon="mock-file"
                    isToggled={false}
                    onClick={[Function]}
                    secondary={false}
                    tip={null}
                    tipPosition="left"
                    toggleTip={null}
                  >
                    <button
                      aria-label={null}
                      className="c1 c2"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <ReactSVG
                        evalScripts="never"
                        fallback={null}
                        loading={null}
                        onInjected={[Function]}
                        renumerateIRIElements={true}
                        src="mock-file"
                        svgClassName={null}
                        svgStyle={Object {}}
                        wrapper="div"
                      >
                        <div />
                      </ReactSVG>
                    </button>
                  </Button>
                </StyledComponent>
              </Button__IconButton>
            </form>
          </StyledComponent>
        </ChatInput__StyledChatInput>
      </Transition>
    </CSSTransition>
  </ChatInput>
</Connect(ChatInput)>
`;

exports[`ChatInput renders correctly 1`] = `
<Connect(ChatInput)>
  <ChatInput
    sendMessage={[Function]}
  >
    <CSSTransition
      classNames="form"
      timeout={3000}
      unmountOnExit={true}
    >
      <Transition
        appear={false}
        enter={true}
        exit={true}
        in={false}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={3000}
        unmountOnExit={true}
      />
    </CSSTransition>
  </ChatInput>
</Connect(ChatInput)>
`;
